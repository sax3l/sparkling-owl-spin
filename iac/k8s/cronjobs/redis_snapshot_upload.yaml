apiVersion: batch/v1
kind: CronJob
metadata:
  name: redis-snapshot-upload
  namespace: data
spec:
  schedule: "0 3 * * *"  # Daily at 3 AM
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: redis-snapshot
            image: redis:7-alpine
            env:
            - name: REDIS_HOST
              value: "redis-service"
            - name: REDIS_PORT
              value: "6379"
            - name: S3_BUCKET
              value: "scraping-backups"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret-access-key
            command:
            - /bin/sh
            - -c
            - |
              set -e
              SNAPSHOT_NAME="redis_snapshot_$(date +%Y%m%d_%H%M%S).rdb"
              echo "Starting Redis snapshot: $SNAPSHOT_NAME"
              
              # Trigger Redis save
              redis-cli -h $REDIS_HOST -p $REDIS_PORT BGSAVE
              
              # Wait for save to complete
              while [ "$(redis-cli -h $REDIS_HOST -p $REDIS_PORT LASTSAVE)" = "$(redis-cli -h $REDIS_HOST -p $REDIS_PORT LASTSAVE)" ]; do
                sleep 1
              done
              
              # Copy snapshot file
              redis-cli -h $REDIS_HOST -p $REDIS_PORT --rdb /tmp/$SNAPSHOT_NAME
              
              # Upload to S3
              aws s3 cp /tmp/$SNAPSHOT_NAME s3://$S3_BUCKET/redis-snapshots/
              
              echo "Redis snapshot completed: $SNAPSHOT_NAME"
            resources:
              requests:
                memory: "128Mi"
                cpu: "50m"
              limits:
                memory: "256Mi"
                cpu: "200m"
          restartPolicy: OnFailure
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
