[testpaths]
testpaths = tests

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--durations=10",
    "--import-mode=importlib",
]

testpaths = ["tests"]

python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "unit: marks tests as unit tests",
    "property: marks tests as property-based tests",
    "mutation: marks tests as mutation tests",
    "fuzz: marks tests as fuzz tests",
    "chaos: marks tests as chaos engineering tests",
    "performance: marks tests as performance tests",
    "security: marks tests as security tests",
    "regression: marks tests as regression tests",
    "smoke: marks tests as smoke tests",
    "acceptance: marks tests as acceptance tests",
    "api: marks tests as API tests",
    "database: marks tests as database tests",
    "proxy: marks tests as proxy-related tests",
    "scraper: marks tests as scraper-related tests",
    "crawler: marks tests as crawler-related tests",
    "antibot: marks tests as anti-bot related tests",
    "ml: marks tests as machine learning related tests",
    "export: marks tests as export-related tests",
    "webapp: marks tests as web application tests",
    "scheduler: marks tests as scheduler-related tests",
]

filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]

log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# Timeout for tests (in seconds)
timeout = 300

# Disable warnings about missing fixtures
disable_warnings = ["pytest_plugins"]

# Custom collection strategy
collect_ignore = [
    "setup.py",
    "conftest.py",
]
