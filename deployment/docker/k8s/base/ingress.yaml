apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: crawler-ingress
  namespace: crawler-production
  labels:
    app: crawler
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-west-2:123456789012:certificate/12345678-1234-1234-1234-123456789012"
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
spec:
  rules:
  - host: api.crawler-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: crawler-api
            port:
              number: 80
  - host: flower.crawler-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flower
            port:
              number: 5555
  tls:
  - hosts:
    - api.crawler-platform.com
    - flower.crawler-platform.com

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: crawler-network-policy
  namespace: crawler-production
spec:
  podSelector:
    matchLabels:
      app: crawler
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9090
  - from:
    - podSelector:
        matchLabels:
          app: crawler
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 5555
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow HTTPS traffic
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP traffic
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow database access
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  # Allow Redis access
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow inter-pod communication
  - to:
    - podSelector:
        matchLabels:
          app: crawler
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 5555
