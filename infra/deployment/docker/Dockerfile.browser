# Docker image for browser automation
FROM mcr.microsoft.com/playwright/python:v1.40.0-jammy

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    DISPLAY=:99 \
    SCREEN_WIDTH=1920 \
    SCREEN_HEIGHT=1080 \
    SCREEN_DEPTH=24

# Install additional dependencies
RUN apt-get update && apt-get install -y \
    xvfb \
    fonts-liberation \
    libappindicator3-1 \
    libasound2 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libxss1 \
    libxtst6 \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r browseruser && useradd -r -g browseruser browseruser

# Set work directory
WORKDIR /app

# Copy requirements
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Install additional browser automation packages
RUN pip install --no-cache-dir \
    selenium \
    playwright \
    undetected-chromedriver \
    seleniumwire

# Copy browser automation modules
COPY --chown=browseruser:browseruser src/scraper/adapters/browser/ ./src/scraper/adapters/browser/
COPY --chown=browseruser:browseruser src/anti_bot/ ./src/anti_bot/
COPY --chown=browseruser:browseruser src/proxy_pool/ ./src/proxy_pool/

# Create necessary directories
RUN mkdir -p /app/data/downloads /app/data/screenshots && \
    chown -R browseruser:browseruser /app/data

# Setup virtual display
RUN echo '#!/bin/bash\nXvfb :99 -screen 0 ${SCREEN_WIDTH}x${SCREEN_HEIGHT}x${SCREEN_DEPTH} &\nexport DISPLAY=:99\nexec "$@"' > /app/start-with-display.sh && \
    chmod +x /app/start-with-display.sh

# Switch to non-root user
USER browseruser

# Health check
HEALTHCHECK --interval=60s --timeout=30s --start-period=10s --retries=3 \
    CMD python -c "from playwright.sync_api import sync_playwright; p = sync_playwright().start(); p.chromium.launch(); p.stop()" || exit 1

# Start with virtual display
ENTRYPOINT ["/app/start-with-display.sh"]
CMD ["python", "-c", "import time; time.sleep(3600)"]  # Keep container alive
