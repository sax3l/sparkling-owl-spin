# API Configuration
# REST API and GraphQL endpoint settings, rate limiting, pagination, and webhook configuration

api:
  # Server configuration
  host: "0.0.0.0"
  port: 8000
  workers: 4
  
  # API versioning
  version: "v1"
  title: "Ethical Crawler & Data Platform API"
  description: "Enterprise web scraping and data extraction platform"
  
  # Request limits and timeouts
  limits:
    max_request_size: "100MB"
    request_timeout: 300  # seconds
    max_concurrent_requests: 1000
    
  # Rate limiting (per client)
  rate_limiting:
    enabled: true
    default_limits:
      requests_per_minute: 60
      requests_per_hour: 1000
      requests_per_day: 10000
    
    # Rate limit tiers
    tiers:
      free:
        requests_per_minute: 10
        requests_per_hour: 100
        requests_per_day: 1000
      
      basic:
        requests_per_minute: 30
        requests_per_hour: 500
        requests_per_day: 5000
      
      premium:
        requests_per_minute: 100
        requests_per_hour: 2000
        requests_per_day: 20000
      
      enterprise:
        requests_per_minute: 500
        requests_per_hour: 10000
        requests_per_day: 100000

  # Pagination defaults
  pagination:
    default_page_size: 20
    max_page_size: 1000
    page_size_options: [10, 20, 50, 100, 500, 1000]
    
  # Response formats
  response_formats:
    default: "json"
    supported: ["json", "csv", "xml", "msgpack"]
    compression: ["gzip", "br"]
    
  # CORS configuration
  cors:
    enabled: true
    allow_origins: ["*"]  # Configure appropriately for production
    allow_methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
    allow_headers: ["*"]
    allow_credentials: false
    max_age: 600

# Authentication and authorization
auth:
  # JWT configuration
  jwt:
    secret_key_env: "JWT_SECRET_KEY"
    algorithm: "HS256"
    access_token_expire_minutes: 60
    refresh_token_expire_days: 30
    
  # API key authentication
  api_keys:
    enabled: true
    header_name: "X-API-Key"
    query_param_name: "api_key"
    
  # OAuth2 configuration
  oauth2:
    enabled: false
    providers:
      google:
        client_id_env: "GOOGLE_CLIENT_ID"
        client_secret_env: "GOOGLE_CLIENT_SECRET"
        scopes: ["openid", "email", "profile"]
      
      github:
        client_id_env: "GITHUB_CLIENT_ID"
        client_secret_env: "GITHUB_CLIENT_SECRET"
        scopes: ["user:email"]

# GraphQL configuration
graphql:
  enabled: true
  endpoint: "/graphql"
  playground_enabled: true  # Disable in production
  introspection_enabled: true  # Disable in production
  
  # Query complexity and depth limits
  limits:
    max_query_depth: 10
    max_query_complexity: 1000
    query_timeout: 30  # seconds
    
  # Subscription configuration
  subscriptions:
    enabled: true
    endpoint: "/graphql/subscriptions"
    connection_timeout: 30
    max_connections: 1000

# Webhook configuration
webhooks:
  enabled: true
  
  # HMAC signature verification
  hmac:
    enabled: true
    secret_key_env: "WEBHOOK_SECRET_KEY"
    algorithm: "sha256"
    header_name: "X-Signature"
    
  # Retry configuration
  retry:
    max_attempts: 3
    initial_delay: 1  # seconds
    max_delay: 60  # seconds
    exponential_backoff: true
    jitter: true
    
  # Webhook timeout
  timeout: 30  # seconds
  
  # Payload configuration
  payload:
    max_size: "1MB"
    content_type: "application/json"
    include_headers: true
    include_metadata: true

# OpenAPI documentation
openapi:
  enabled: true
  url: "/docs"
  redoc_url: "/redoc"
  
  # Documentation metadata
  contact:
    name: "API Support"
    email: "api-support@example.com"
    url: "https://example.com/support"
    
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
    
  # Security schemes
  security_schemes:
    apiKey:
      type: "apiKey"
      in: "header"
      name: "X-API-Key"
    
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"

# Error handling
error_handling:
  # Include stack traces in development
  include_traceback: false
  
  # Error response format
  response_format:
    include_error_id: true
    include_timestamp: true
    include_request_id: true
    
  # Custom error codes
  custom_errors:
    RATE_LIMIT_EXCEEDED:
      status_code: 429
      message: "Rate limit exceeded"
      
    INVALID_API_KEY:
      status_code: 401
      message: "Invalid API key"
      
    SCRAPING_FORBIDDEN:
      status_code: 403
      message: "Scraping not allowed for this domain"
      
    TEMPLATE_NOT_FOUND:
      status_code: 404
      message: "Template not found"
      
    EXPORT_FAILED:
      status_code: 500
      message: "Export operation failed"

# Monitoring and metrics
monitoring:
  # Prometheus metrics
  metrics:
    enabled: true
    endpoint: "/metrics"
    
  # Health checks
  health_checks:
    endpoint: "/health"
    detailed_endpoint: "/health/detailed"
    
    # Health check components
    checks:
      database: true
      redis: true
      external_apis: true
      disk_space: true
      memory_usage: true
      
  # Request logging
  logging:
    log_requests: true
    log_responses: false  # Enable for debugging only
    log_headers: false    # Enable for debugging only
    exclude_paths: ["/health", "/metrics"]

# Development settings
development:
  # Auto-reload on code changes
  auto_reload: true
  
  # Debug mode
  debug: true
  
  # Mock external services
  mock_external_apis: false
  
  # Database fixtures
  load_fixtures: true
  
  # Synthetic data generation
  generate_test_data: true

# Production optimizations
production:
  # Performance settings
  keep_alive_timeout: 5
  max_keep_alive_connections: 1000
  
  # Security headers
  security_headers:
    x_frame_options: "DENY"
    x_content_type_options: "nosniff"
    x_xss_protection: "1; mode=block"
    referrer_policy: "strict-origin-when-cross-origin"
    
  # Response compression
  compression:
    enabled: true
    minimum_size: 1024  # bytes
    compression_level: 6
