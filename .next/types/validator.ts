// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ..\..\app\analytics\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\analytics\\page.js")
  handler satisfies AppPageConfig<"/analytics">
}

// Validate ..\..\app\anti-bot\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\anti-bot\\page.js")
  handler satisfies AppPageConfig<"/anti-bot">
}

// Validate ..\..\app\data\companies\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\data\\companies\\page.js")
  handler satisfies AppPageConfig<"/data/companies">
}

// Validate ..\..\app\data\persons\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\data\\persons\\page.js")
  handler satisfies AppPageConfig<"/data/persons">
}

// Validate ..\..\app\data\properties\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\data\\properties\\page.js")
  handler satisfies AppPageConfig<"/data/properties">
}

// Validate ..\..\app\data\vehicles\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\data\\vehicles\\page.js")
  handler satisfies AppPageConfig<"/data/vehicles">
}

// Validate ..\..\app\export\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\export\\page.js")
  handler satisfies AppPageConfig<"/export">
}

// Validate ..\..\app\monitoring\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\monitoring\\page.js")
  handler satisfies AppPageConfig<"/monitoring">
}

// Validate ..\..\app\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ..\..\app\proxies\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\proxies\\page.js")
  handler satisfies AppPageConfig<"/proxies">
}

// Validate ..\..\app\selector-studio\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\selector-studio\\page.js")
  handler satisfies AppPageConfig<"/selector-studio">
}

// Validate ..\..\app\settings\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\settings\\page.js")
  handler satisfies AppPageConfig<"/settings">
}







// Validate ..\..\app\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\layout.js")
  handler satisfies LayoutConfig<"/">
}
